{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Desktop/Coursework/ecommerce/src/contexts/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// // create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // cart state\n\n  const [cart, setCart] = useState([]);\n\n  // // add to cart\n\n  const addToCart = (product, id) => {\n    const newItem = {\n      ...product,\n      amount: 1\n    };\n\n    // check if the item is already in the \n    // cart\n    let carItem;\n    carItem = cart.find(item => {\n      return item.id === id;\n    });\n\n    // // if cart item is already in the cart\n\n    if (cartItem) {\n      const newCart = [...cart].map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            amount: cartItem.amount + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCart(newCart);\n    } else {\n      setCart([...cart, newItem]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 6\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","CartContext","CartProvider","children","cart","setCart","addToCart","product","id","newItem","amount","carItem","find","item","cartItem","newCart","map"],"sources":["/Users/Ashley/Desktop/Coursework/ecommerce/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// // create context\n\nexport const CartContext = createContext()\n\nconst CartProvider = ({children}) => {\n\n// cart state\n\nconst [cart, setCart] = useState([]);\n\n\n// // add to cart\n\nconst addToCart = (product, id) => {\nconst newItem = { ...product, amount: 1 };\n\n// check if the item is already in the \n// cart\nlet carItem;\n carItem = cart.find((item) => {\nreturn item.id === id;\n});\n\n// // if cart item is already in the cart\n\n  if (cartItem) {\n   const newCart = [...cart].map((item)=> {\n       if (item.id === id) {\n           return {...item, amount: cartItem.amount + 1 };\n       } else {\n           return item;\n       }\n});\nsetCart(newCart);\n} else {\n   setCart([...cart, newItem]);\n\n}\n\n\n };\n\nreturn (\n     <CartContext.Provider value={{ cart, addToCart }}>\n          {children}\n</CartContext.Provider>\n);\n};\n\n export default CartProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAE;AAE1C,MAAMI,YAAY,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAEhC;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAGpC;;EAEA,MAAMO,SAAS,GAAG,CAACC,OAAO,EAAEC,EAAE,KAAK;IACnC,MAAMC,OAAO,GAAG;MAAE,GAAGF,OAAO;MAAEG,MAAM,EAAE;IAAE,CAAC;;IAEzC;IACA;IACA,IAAIC,OAAO;IACVA,OAAO,GAAGP,IAAI,CAACQ,IAAI,CAAEC,IAAI,IAAK;MAC/B,OAAOA,IAAI,CAACL,EAAE,KAAKA,EAAE;IACrB,CAAC,CAAC;;IAEF;;IAEE,IAAIM,QAAQ,EAAE;MACb,MAAMC,OAAO,GAAG,CAAC,GAAGX,IAAI,CAAC,CAACY,GAAG,CAAEH,IAAI,IAAI;QACnC,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,EAAE;UAChB,OAAO;YAAC,GAAGK,IAAI;YAAEH,MAAM,EAAEI,QAAQ,CAACJ,MAAM,GAAG;UAAE,CAAC;QAClD,CAAC,MAAM;UACH,OAAOG,IAAI;QACf;MACP,CAAC,CAAC;MACFR,OAAO,CAACU,OAAO,CAAC;IAChB,CAAC,MAAM;MACJV,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEK,OAAO,CAAC,CAAC;IAE9B;EAGC,CAAC;EAEF,oBACK,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEL,IAAI;MAAEE;IAAU,CAAE;IAAA,UAC3CH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAEvB,CAAC;AAAC,GA3CID,YAAY;AAAA,KAAZA,YAAY;AA6CjB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}